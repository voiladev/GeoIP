name: Publish GeoLite.mmdb

on:
  repository_dispatch:
  workflow_dispatch:
  schedule:
    - cron: '0 1 * * 3'  # 每周三1:00 UTC

jobs:
  run:
    runs-on: ubuntu-latest
    timeout-minutes: 15

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Download databases
        run: |
          cat <<EOF > GeoIP.conf
          AccountID ${{ secrets.MAXMIND_ACCOUNT_ID }}
          LicenseKey ${{ secrets.MAXMIND_LICENSE_KEY }}
          EditionIDs GeoLite2-ASN GeoLite2-City GeoLite2-Country
          DatabaseDirectory /tmp/geoip
          EOF

          docker run --rm \
            -v $(pwd)/GeoIP.conf:/etc/GeoIP.conf \
            -v /tmp/geoip:/usr/share/GeoIP \
            ghcr.io/maxmind/geoipupdate:latest

          MIN_SIZE=5000000
          for db in /tmp/geoip/*.mmdb; do
            size=$(wc -c < "$db")
            if [ "$size" -lt $MIN_SIZE ]; then
              echo "❌ $db 损坏 (大小: $size)"; exit 1
            fi
          done

          rm -f GeoIP.conf
          mkdir -p upload
          cp -v /tmp/geoip/*.mmdb upload/
          echo "TAG_NAME=$(date +'%Y.%m.%d')" >> $GITHUB_ENV

      - name: Push to download branch
        if: success()
        run: |
          git clone -b download "https://${{ github.actor }}:${{ secrets.GITHUB_TOKEN }}@github.com/${{ github.repository }}" download
          cp upload/*.mmdb download/
          cd download
          git config user.name "${{ github.actor }}"
          git config user.email "${{ github.actor }}@users.noreply.github.com"
          git add .
          git commit -m "${{ env.TAG_NAME }}"
          git push origin download

      - name: Release databases
        uses: softprops/action-gh-release@v2
        if: success()
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ env.TAG_NAME }}
          body: "GeoLite2 Database (${{ env.TAG_NAME }})"
          files: upload/*.mmdb

      - name: Remove old Releases
        uses: dev-drprasad/delete-older-releases@master
        with:
          keep_latest: 2
          delete_tags: true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Delete workflow runs
        uses: Mattraks/delete-workflow-runs@main
        with:
          retain_days: 0
          keep_minimum_runs: 2